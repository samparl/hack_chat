c
channel
channel = Channel.find(params[:id])
c
channel
c
json
c
conversation.partner_of(current_user)
c
conversation
c
conversation
c
@channels.count
@channels[:direct]
@channels.direct
@channels
c
@conversation
c
channel_params
current_user.id
current_user
@conversation
c
channel_params
c
response
c
@channels[:direct][0]
@channels[:direct].first
@channels[:direct]
@channels.direct
c
User.find(1)
@message
c
current_user
current_user.channels
c
@channels
c
@channels[:unsubscribed]
@channels.unsubscribed
@channels
c
@channels[:unsubscribed]
@channels[unsubscribed]
@channels.unsubscribed
@channels
c
Channel.includes(:users_channels).where(user_channels: {user_id: params[:user][:id]})[0]
Channel.includes(:users_channels).where(user_channels: {user_id: params[:user][:id]})
@channels
c
        .where(user_channels: {user_id: params[:user][:id]})
Channel.includes(:users_channels)
params[:user][:id]
Channel.joins("LEFT JOIN user_channels ON user_channels.channel_id = channels.id")
@channels
c
@channels
c
@channels
c
@channels[:subscribed]
@channels.subscribed
@channels
c
@channels
c
@channels
c
exit
@channels
c
params[:user][:id]
params[:user]
params.user
params
params.user.id
params
Channel.where(id: 1).user_channels
Channel.where(id: 1).users
Channel.where(id: 1)
Channel.includes(users)
Channel.includes(users).where(user.id: 1)
Channel.where(Channel.user.id = 1)
Channel.where(Channel.user.id: 1)
Channel.where(user.id: 1)
Channel.where(id: params[:user][:id])
params[:user][:id].to_i
params[:user][:id]
params[:user][:id
params[:user]
params
Channel.where(id: 1)
Channel.all
Channel.al
c
exit
User.find(1)
User.find_by(session_token: session[:session_token])
current_user.session_token
session[:session_token]
User.find_by(session_token: session[:session_token])
current_user
exit
